/*!
 * Signature Pad v2.3.2 | https://github.com/szimek/signature_pad
 * (c) 2018 Szymon Nowak | Released under the MIT license
 */
!function (a, b) { "object" == typeof exports && "undefined" != typeof module ? module.exports = b() : "function" == typeof define && define.amd ? define(b) : (a = a || self).SignaturePad = b() }(this, function () { "use strict"; function a(a, b, c) { return function (d) { return function (a, b) { var c = a.x - b.x, d = a.y - b.y; return Math.sqrt(c * c + d * d) }(d, a) <= b ? c(d) : c(a) } } function b(a, b, c) { var d, e, f, g, h, i, j; return function () { for (var k = [], l = 0; l < arguments.length; l++)k[l] = arguments[l]; return d = k[0], e = k[1], f = k[2], j = k[3], i = j.x, g = j.y, h = j.color, function (a) { return !a || "object" != typeof a }((a || {}).dot) ? b(d, e, f) : c(d, e, f, i, g, h) } } var c = function () { function a() { this.length = 0, this.reset() } return a.prototype.add = function (a) { return this.data.push(a), this.length += 1 }, a.prototype.reset = function () { this.data = [], this.length = 0 }, a }(), d = function () { function a(a, b, c) { this._length = a || 1, this._minDistance = b || 2, this._maxDistance = c || 100, this.reset() } return a.prototype.reset = function () { this._points = [] }, a.prototype.add = function (a) { if (!this._points.length || this._distance(a) > this._minDistance) { var b = this._points[this._points.length - 1]; return this._points.push(a), this._points.length >= 3 && this._points.splice(0, this._points.length - 2), b && (a.control = b), a } }, a.prototype._distance = function (a) { var b = this._points[this._points.length - 1]; return b ? Math.sqrt((b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y)) : 0 }, a }(), e = function () { function a(a) { this._element = a, this._context = a.getContext("2d"), this._points = [], this._data = [], this._reset() } return Object.defineProperty(a.prototype, "data", { get: function () { return this._data }, enumerable: !0, configurable: !0 }), a.prototype.clear = function () { this._data = [], this._reset() }, a.prototype.toDataURL = function (a) { return this._element.toDataURL(a) }, a.prototype.fromDataURL = function (a) { var b = this; return new Promise(function (c) { b.clear(); var d = new Image; d.onload = function () { b._context.drawImage(d, 0, 0), c() }, d.src = a }) }, a.prototype.on = function (a, b) { this._handlers[a] = this._handlers[a] || [], this._handlers[a].push(b) }, a.prototype.off = function (a, b) { this._handlers[a] = this._handlers[a] || [], this._handlers[a].splice(this._handlers[a].indexOf(b), 1) }, a.prototype._reset = function () { this._context.fillStyle = "rgba(255, 255, 255, 0)", this._context.fillRect(0, 0, this._element.width, this._element.height) }, a }(); return e });
